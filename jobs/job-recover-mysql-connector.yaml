# Rrecover a corrupted or lost database history topic, or periodically "clean up" a large database history topic
# Scenario occurred when deleting the database history topic while the connector pod was running.
# https://issues.redhat.com/browse/DBZ-1230
apiVersion: v1
data:
  script.sh: |-
    curl -X POST http://connector-0.connector.totalwine.svc.cluster.local:8083/connectors -H "Content-Type: application/json" -d '{
      "name": "mysql",
      "config": {
         "connector.class": "io.debezium.connector.mysql.MySqlConnector",
         "tasks.max": "1",
         "database.hostname": "mysql.totalwine.svc.cluster.local",
         "database.port": "3306",
         "database.user": "'${MYSQL_USER}'",
         "database.password": "'${MYSQL_PASSWORD}'",
         "database.server.id": "223344",
         "database.server.name": "dbserver1",
         "database.history.kafka.bootstrap.servers": "'${CONNECT_BOOTSTRAP_SERVERS}'",
         "database.history.kafka.topic": "dbhistory.dbserver1",
         "database.history.consumer.security.protocol": "'${CONNECT_CONSUMER_SECURITY_PROTOCOL}'",
         "database.history.consumer.ssl.endpoint.identification.algorithm": "'${CONNECT_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM}'",
         "database.history.consumer.sasl.mechanism": "'${CONNECT_CONSUMER_SASL_MECHANISM}'",
         "database.history.consumer.sasl.jaas.config": "org.apache.kafka.common.security.plain.PlainLoginModule required username=\"'${API_KEY}'\" password=\"'${SECRET}'\";",
         "database.history.producer.security.protocol": "'${CONNECT_PRODUCER_SECURITY_PROTOCOL}'",
         "database.history.producer.ssl.endpoint.identification.algorithm": "'${CONNECT_PRODUCER_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM}'",
         "database.history.producer.sasl.mechanism": "'${CONNECT_PRODUCER_SASL_MECHANISM}'",
         "database.history.producer.sasl.jaas.config": "org.apache.kafka.common.security.plain.PlainLoginModule required username=\"'${API_KEY}'\" password=\"'${SECRET}'\";",
         "include.schema.changes": "true",
         "database.whitelist": "demo",
         "table.whitelist": "demo.member",
         "value.converter": "io.confluent.connect.avro.AvroConverter",
         "value.converter.basic.auth.credentials.source": "USER_INFO",
         "value.converter.schema.registry.url": "https://'${SCHEMA_REGISTRY_URL}'",
         "value.converter.schema.registry.basic.auth.user.info": "'${SCHEMA_REGISTRY_USERNAME}':'${SCHEMA_REGISTRY_PASSWORD}'",
         "auto.register.schemas": "true",
         "snapshot.mode": "schema_only_recovery"
      }
    }'
kind: ConfigMap
metadata:
  name: script-load-mysql-connector
---
apiVersion: batch/v1
kind: Job
metadata:
  name: load-mysql-connector
spec:
  backoffLimit: 2
  ttlSecondsAfterFinished: 180
  template:
    spec:
      containers:
        - command:
            - "sh"
            - "/opt/script/script.sh"
          envFrom:
            - configMapRef:
                name: connect-properties
          image: curlimages/curl
          imagePullPolicy: IfNotPresent
          name: load-mysql-connector
          volumeMounts:
            - mountPath: /opt/script
              name: script-load-mysql-connector
              readOnly: false
      restartPolicy: Never
      volumes:
        - configMap:
            name: script-load-mysql-connector
          name: script-load-mysql-connector

